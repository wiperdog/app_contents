<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
  <web>WiperDogLib</web>
  <name>RealtimeDataLiveTable</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>Main.AllDocs</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1386227066000</creationDate>
  <date>1386227066000</date>
  <contentUpdateDate>1386227066000</contentUpdateDate>
  <version>1.1</version>
  <title>RealtimeDataLiveTable</title>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>false</hidden>
  <content>
{{groovy}}
import com.google.gson.*

def job = request.get("jobName")
def istIid = request.get("IstIid")
if (job != null &amp;&amp; istIid != null) {
    Gson gson = new GsonBuilder().setPrettyPrinting().create()
    result = services.MongoDBConnection.getDataAllFields(job, 50, istIid)
    def retData
    if(result[0] != null){
	def jobType = result[0]['type']
	if (jobType == "Store") {
		retData = []
		for(def i = result.size() - 1; i &gt;= 0; i--){
			def res = result[i]
                        for(def dat in res.data){
			    def retObj = [:]
			    //retObj = dat
			    for(def key in dat.keySet()){
                               if(dat[key] instanceof java.lang.String){
                        	  //Replace for parseJSON
                                  retObj[key] = dat[key].replaceAll("\\\\","/") 
                               } else {
                                  retObj[key] = dat[key]
                               }
                            }
			    retObj['Fetch At'] = (new Date().parse("yyyyMMddHHmmssz", res.fetchAt)).format('yyyy/MM/dd HH:mm:ss z')
			    retData.add(retObj)
            }
		}
		println gson.toJson(retData)
	} else {
		def listKey = []
		retData = [:]
		for(def dat in result[0]['data']){
			listKey.add(dat.key)
		}
		for(def key in listKey){
			retData[key] = []
		}
		for(def i = result.size() - 1; i &gt;= 0; i--){
			def res = result[i]
			def fetchAtValue = (new Date().parse("yyyyMMddHHmmssz", res.fetchAt)).format('yyyy/MM/dd HH:mm:ss z')
			for(def key in listKey){
				def listData = res['data'][key]
				for(def data in listData){
				    for(def datakey in data.keySet()){
                                        if(data[datakey] instanceof java.lang.String){
                                            data[datakey] = data[datakey].replaceAll("\\\\","/") 
                                        } else {
                                            data[datakey] = data[datakey]
                                        }
                                    }
				    data['Fetch At'] = fetchAtValue
				    retData[key].add(data)
				}
			}
		}
		println gson.toJson(retData)
	}
    }
    //services.MongoDBConnection.closeConnection()
}
{{/groovy}}</content>
</xwikidoc>
