<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
  <web>WiperDogLib</web>
  <name>MongoDBConnection</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>WiperDogLib.WebHome</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1380879467000</creationDate>
  <date>1389777854000</date>
  <contentUpdateDate>1389777854000</contentUpdateDate>
  <version>1.1</version>
  <title>MongoDBConnection</title>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>false</hidden>
  <object>
    <class>
      <name>XWiki.XWikiRights</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <allow>
        <defaultValue>1</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>allow</displayType>
        <name>allow</name>
        <number>4</number>
        <prettyName>Allow/Deny</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </allow>
      <groups>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>groups</name>
        <number>1</number>
        <picker>1</picker>
        <prettyName>Groups</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
      </groups>
      <levels>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>1</multiSelect>
        <name>levels</name>
        <number>2</number>
        <prettyName>Levels</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>3</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
      </levels>
      <users>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>users</name>
        <number>3</number>
        <picker>1</picker>
        <prettyName>Users</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
      </users>
    </class>
    <name>WiperDogLib.MongoDBConnection</name>
    <number>0</number>
    <className>XWiki.XWikiRights</className>
    <guid>061622e6-e637-4d7d-882b-2bf86c967dc2</guid>
    <property>
      <allow>1</allow>
    </property>
    <property>
      <groups>XWiki.XWikiAdminGroup</groups>
    </property>
    <property>
      <levels>view,comment,edit,delete</levels>
    </property>
  </object>
  <object>
    <class>
      <name>XWiki.XWikiRights</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <allow>
        <defaultValue>1</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>allow</displayType>
        <name>allow</name>
        <number>4</number>
        <prettyName>Allow/Deny</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </allow>
      <groups>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>groups</name>
        <number>1</number>
        <picker>1</picker>
        <prettyName>Groups</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
      </groups>
      <levels>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>1</multiSelect>
        <name>levels</name>
        <number>2</number>
        <prettyName>Levels</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>3</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
      </levels>
      <users>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>users</name>
        <number>3</number>
        <picker>1</picker>
        <prettyName>Users</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
      </users>
    </class>
    <name>WiperDogLib.MongoDBConnection</name>
    <number>2</number>
    <className>XWiki.XWikiRights</className>
    <guid>ae8bc133-471e-4da1-8ed9-42d649ec6f26</guid>
    <property>
      <allow>0</allow>
    </property>
    <property>
      <groups>XWiki.XWikiAllGroup</groups>
    </property>
    <property>
      <levels>delete,edit</levels>
    </property>
  </object>
  <object>
    <class>
      <name>XWiki.XWikiRights</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <allow>
        <defaultValue>1</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>allow</displayType>
        <name>allow</name>
        <number>4</number>
        <prettyName>Allow/Deny</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </allow>
      <groups>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>groups</name>
        <number>1</number>
        <picker>1</picker>
        <prettyName>Groups</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
      </groups>
      <levels>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>1</multiSelect>
        <name>levels</name>
        <number>2</number>
        <prettyName>Levels</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>3</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
      </levels>
      <users>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>users</name>
        <number>3</number>
        <picker>1</picker>
        <prettyName>Users</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
      </users>
    </class>
    <name>WiperDogLib.MongoDBConnection</name>
    <number>3</number>
    <className>XWiki.XWikiRights</className>
    <guid>4b01b46a-63ed-424a-a833-8b76874ff2c0</guid>
    <property>
      <allow>1</allow>
    </property>
    <property>
      <groups>XWiki.XWikiAllGroup</groups>
    </property>
    <property>
      <levels>comment,view</levels>
    </property>
  </object>
  <object>
    <class>
      <name>XWiki.XWikiRights</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <allow>
        <defaultValue>1</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>allow</displayType>
        <name>allow</name>
        <number>4</number>
        <prettyName>Allow/Deny</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </allow>
      <groups>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>groups</name>
        <number>1</number>
        <picker>1</picker>
        <prettyName>Groups</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
      </groups>
      <levels>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>1</multiSelect>
        <name>levels</name>
        <number>2</number>
        <prettyName>Levels</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>3</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
      </levels>
      <users>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>users</name>
        <number>3</number>
        <picker>1</picker>
        <prettyName>Users</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
      </users>
    </class>
    <name>WiperDogLib.MongoDBConnection</name>
    <number>4</number>
    <className>XWiki.XWikiRights</className>
    <guid>bfab7eeb-c9ef-4f95-96bb-8de6c8324040</guid>
    <property>
      <allow>1</allow>
    </property>
    <property>
      <levels>view,comment</levels>
    </property>
    <property>
      <users>XWiki.XWikiGuest</users>
    </property>
  </object>
  <object>
    <class>
      <name>XWiki.XWikiRights</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <allow>
        <defaultValue>1</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>allow</displayType>
        <name>allow</name>
        <number>4</number>
        <prettyName>Allow/Deny</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </allow>
      <groups>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>groups</name>
        <number>1</number>
        <picker>1</picker>
        <prettyName>Groups</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
      </groups>
      <levels>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>1</multiSelect>
        <name>levels</name>
        <number>2</number>
        <prettyName>Levels</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>3</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
      </levels>
      <users>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>users</name>
        <number>3</number>
        <picker>1</picker>
        <prettyName>Users</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
      </users>
    </class>
    <name>WiperDogLib.MongoDBConnection</name>
    <number>5</number>
    <className>XWiki.XWikiRights</className>
    <guid>018f5e58-595e-4c7a-b42a-f6f56733ca02</guid>
    <property>
      <allow>0</allow>
    </property>
    <property>
      <levels>edit,delete</levels>
    </property>
    <property>
      <users>XWiki.XWikiGuest</users>
    </property>
  </object>
  <content>{{groovy}}
import com.gmongo.GMongo
import java.text.SimpleDateFormat
import groovy.json.*
import org.xwiki.component.descriptor.*;
import org.xwiki.script.service.*;
import com.xpn.xwiki.web.*;

class MongoDBConnection implements ScriptService {
 def static final dbName = 'wiperdog'
 def static final host= '127.0.0.1'
 def static final port = 27017
 def static final user = ''
 def static final pass = ''
 def db
 def gmongo

 def MongoDBConnection(){
    this.getConnection()
 }

 //Get new connection
 def getConnection(){
   Properties props = System.getProperties();
   def xwiki_dir = props.getProperty('user.dir');
   def params
   def decidedHost
   def decidedPort
   def decidedDbName
   def decidedUser
   def decidedPass
   File f = new File(xwiki_dir +"/webapps/xwiki/resources/conf.params")
   if(f.exists()){
	   def shell = new GroovyShell()
	   params = shell.evaluate(f)
	   def declaredMongoDB 
	   if (params != null) {
                   declaredMongoDB = params['mongoDB']
           }
	   if(declaredMongoDB != null){
	   	   decidedDbName = (declaredMongoDB['dbName'] != null)?declaredMongoDB['dbName'] : dbName
	   	   decidedHost = (declaredMongoDB['host'] != null)?declaredMongoDB['host'] : host
	   	   decidedPort = (declaredMongoDB['port'] != null)?declaredMongoDB['port'] : port
	   	   decidedUser = (declaredMongoDB['user'] != null)?declaredMongoDB['user'] : user
	   	   decidedPass = (declaredMongoDB['pass'] != null)?declaredMongoDB['pass'] : pass
	   }else{
	   	   decidedHost = host
	   	   decidedPort = port
	   	   decidedDbName = dbName
                   decidedUser = user
                   decidedPass = pass
	   }
   }else{
           decidedHost = host
           decidedPort= port 
           decidedDbName= dbName
           decidedUser = user
           decidedPass = pass
   }
   // Remote connect to host:port
   gmongo = new GMongo(decidedHost, decidedPort)
   // Local connect
   db = gmongo.getDB(decidedDbName)
   if(decidedUser != ""){
     // Authenticate user and password connect to database
     db.authenticate(decidedUser, decidedPass.toCharArray())
   }
  return gmongo
 }

 //Close connection
 def closeConnection(){
    gmongo.close()
 }

 //Get mongoDB Object
 def getMongoDB(){
    return db
 }

 //Get all records
 def getDataAllFields(collection){
  def list_data = []
  assert collection != null &amp;&amp; collection != "" : "Can not get data ! Collection is null or empty string"
  def result = db[collection].find();
  while(result.hasNext()){
   list_data.add(result.next())
  }
  return list_data

 }

 //Get limit N lastest records
 def getDataAllFields(collection,limit,istIid){
  def list_data = []
  assert collection != null &amp;&amp; collection != "" : "Can not get data ! Collection is null or empty string"
  assert limit != null : "Can not get data ! Limit is null"
  def realCollectionName = collection + "." + istIid
  def result = db[realCollectionName].find().sort( fetchAt : -1).limit(limit)
  while(result.hasNext()){
   list_data.add(result.next())
  }
  return (ArrayList)list_data.reverse()
 }

 //Get  all records with specific fields
 def getDataLimitFields(collection,fields){
  def list_data = []
  assert collection != null &amp;&amp; collection != "" : "Can not get data ! Collection is null or empty string"
  assert (fields !=null &amp;&amp; fields !=[]) : "Can not get data ! List fields is null or empty"
  def result = db[collection].find().sort(fetchAt: -1)
  def tmp = [:]
  while(result.hasNext()){
   def doc = result.next()
   for(dat in doc.data){
    if( tmp["fetchAt"] == null){
     tmp["fetchAt"] = doc.fetchAt
    }
    for(item in fields){
     tmp[item] = it[item]
    }
    list_data.add(tmp)
    tmp=[:]
   }
  }
  return (ArrayList)list_data.reverse()
 }

 //Get  N lastest record with specific fields
 def getDataLimitFields(collection,fields,limit){
  def list_data = []
  assert collection != null &amp;&amp; collection != "" : "Can not get data ! Collection is null or empty string"
  assert limit != null : "Can not get data ! Limit is null"
  assert (fields !=null &amp;&amp; fields !=[]) : "Can not get data ! List fields is null or empty"
  def result = db[collection].find().sort(fetchAt: -1).limit(limit)
  def tmp = [:]
  while(result.hasNext()){
   def doc = result.next()
   for(dat in doc.data){
    if( tmp["fetchAt"] == null){
     tmp["fetchAt"] = doc.fetchAt
    }
    for(item in fields){
     tmp[item] = it[item]
    }
    list_data.add(tmp)
    tmp=[:]
   }
  }
  return (ArrayList)list_data.reverse()
 }

 //Get  type of data (Store/Subtype)
 def getDataType(collection){
  assert collection != null &amp;&amp; collection != "" : "Can not get data ! Collection is null or empty string"
  def result = db[collection].find().sort(fetchAt: -1).limit(1)
  def doc
  while(result.hasNext()){
    doc = result.next()
  }
  if (doc != null) {
     return doc.type
  } else {
     return null
  }
 }

 //Get monitor data with conditions
 def getDataInPeriod(collection,fromDate,toDate,limit,istIid){
  def realCollectionName = collection + "." + istIid
  SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss")
  def list_data = []
  assert collection != null || collection != "" || istIid != null || istIid !="" : "Can not get data ! Collection is null or empty string"
  assert limit != null : "Can not get data ! Limit is null"
  assert (fromDate != null &amp;&amp; toDate != null) : "Can not get data ! 'From Date' or 'To date' is null !"
  def result = null
  if( toDate!= "" ) {
   toDate = (Long)(format.parse(toDate).getTime()/1000.intValue())
   if(fromDate!= "" ){
    fromDate = (Long)(format.parse(fromDate).getTime()/1000.intValue())
    result = db[realCollectionName].find( fetchedAt_bin: [ $gt: fromDate ,$lt: toDate ]).sort(fetchAt: -1).limit(limit)
   } else {
    result = db[realCollectionName].find( fetchedAt_bin: [ $lt: toDate ]).sort(fetchAt: -1).limit(limit)
   }
  } else {
   if(fromDate!= "" ){
    fromDate = (Long)(format.parse(fromDate).getTime()/1000.intValue())
    result = db[realCollectionName].find( fetchedAt_bin: [ $gt: fromDate ]).sort(fetchAt: -1).limit(limit)
   } else {
       return this.getDataAllFields(collection,limit,istIid)
   }
  }
  if(result!=null){
   while(result.hasNext()){
    list_data.add(result.next())
   }
   return (ArrayList)list_data.reverse()
  }
 }
}

DefaultComponentDescriptor descriptor = new DefaultComponentDescriptor(implementation: MongoDBConnection.class, role: ScriptService.class, roleHint: 'MongoDBConnection');
Utils.getComponentManager().unregisterComponent(ScriptService.class, 'MongoDBConnection');
Utils.getComponentManager().registerComponent(descriptor);
{{/groovy}}</content></xwikidoc>
