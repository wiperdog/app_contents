<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
  <web>WiperDogLib</web>
  <name>ConsoleService</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <parent>WiperDogLib.WebHome</parent>
  <creator>xwiki:XWiki.Admin</creator>
  <author>xwiki:XWiki.Admin</author>
  <customClass/>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1380879465000</creationDate>
  <date>1386040198000</date>
  <contentUpdateDate>1386040198000</contentUpdateDate>
  <version>1.1</version>
  <title>ConsoleService</title>
  <defaultTemplate/>
  <validationScript/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>false</hidden>
  <object>
    <class>
      <name>XWiki.XWikiRights</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <allow>
        <defaultValue>1</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>allow</displayType>
        <name>allow</name>
        <number>4</number>
        <prettyName>Allow/Deny</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </allow>
      <groups>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>groups</name>
        <number>1</number>
        <picker>1</picker>
        <prettyName>Groups</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
      </groups>
      <levels>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>1</multiSelect>
        <name>levels</name>
        <number>2</number>
        <prettyName>Levels</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>3</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
      </levels>
      <users>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>users</name>
        <number>3</number>
        <picker>1</picker>
        <prettyName>Users</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
      </users>
    </class>
    <name>WiperDogLib.ConsoleService</name>
    <number>0</number>
    <className>XWiki.XWikiRights</className>
    <guid>34ccc54a-bb52-47c6-91dc-2d51b30e5b45</guid>
    <property>
      <allow>1</allow>
    </property>
    <property>
      <groups>XWiki.XWikiAdminGroup</groups>
    </property>
    <property>
      <levels>view,comment,edit,delete</levels>
    </property>
  </object>
  <object>
    <class>
      <name>XWiki.XWikiRights</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <allow>
        <defaultValue>1</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>allow</displayType>
        <name>allow</name>
        <number>4</number>
        <prettyName>Allow/Deny</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </allow>
      <groups>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>groups</name>
        <number>1</number>
        <picker>1</picker>
        <prettyName>Groups</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
      </groups>
      <levels>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>1</multiSelect>
        <name>levels</name>
        <number>2</number>
        <prettyName>Levels</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>3</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
      </levels>
      <users>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>users</name>
        <number>3</number>
        <picker>1</picker>
        <prettyName>Users</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
      </users>
    </class>
    <name>WiperDogLib.ConsoleService</name>
    <number>2</number>
    <className>XWiki.XWikiRights</className>
    <guid>84ab526e-39d3-45a7-9566-1cf0724840a4</guid>
    <property>
      <allow>0</allow>
    </property>
    <property>
      <groups>XWiki.XWikiAllGroup</groups>
    </property>
    <property>
      <levels>delete,edit</levels>
    </property>
  </object>
  <object>
    <class>
      <name>XWiki.XWikiRights</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <allow>
        <defaultValue>1</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>allow</displayType>
        <name>allow</name>
        <number>4</number>
        <prettyName>Allow/Deny</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </allow>
      <groups>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>groups</name>
        <number>1</number>
        <picker>1</picker>
        <prettyName>Groups</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
      </groups>
      <levels>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>1</multiSelect>
        <name>levels</name>
        <number>2</number>
        <prettyName>Levels</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>3</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
      </levels>
      <users>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>users</name>
        <number>3</number>
        <picker>1</picker>
        <prettyName>Users</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
      </users>
    </class>
    <name>WiperDogLib.ConsoleService</name>
    <number>3</number>
    <className>XWiki.XWikiRights</className>
    <guid>b3c8e3a4-bc89-4b48-b2d0-e68a261020b8</guid>
    <property>
      <allow>1</allow>
    </property>
    <property>
      <groups>XWiki.XWikiAllGroup</groups>
    </property>
    <property>
      <levels>comment,view</levels>
    </property>
  </object>
  <object>
    <class>
      <name>XWiki.XWikiRights</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <allow>
        <defaultValue>1</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>allow</displayType>
        <name>allow</name>
        <number>4</number>
        <prettyName>Allow/Deny</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </allow>
      <groups>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>groups</name>
        <number>1</number>
        <picker>1</picker>
        <prettyName>Groups</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
      </groups>
      <levels>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>1</multiSelect>
        <name>levels</name>
        <number>2</number>
        <prettyName>Levels</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>3</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
      </levels>
      <users>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>users</name>
        <number>3</number>
        <picker>1</picker>
        <prettyName>Users</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
      </users>
    </class>
    <name>WiperDogLib.ConsoleService</name>
    <number>4</number>
    <className>XWiki.XWikiRights</className>
    <guid>c7be2c34-979b-4912-b3f4-f48ff5403295</guid>
    <property>
      <allow>1</allow>
    </property>
    <property>
      <levels>view,comment</levels>
    </property>
    <property>
      <users>XWiki.XWikiGuest</users>
    </property>
  </object>
  <object>
    <class>
      <name>XWiki.XWikiRights</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <allow>
        <defaultValue>1</defaultValue>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>allow</displayType>
        <name>allow</name>
        <number>4</number>
        <prettyName>Allow/Deny</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </allow>
      <groups>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>groups</name>
        <number>1</number>
        <picker>1</picker>
        <prettyName>Groups</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
      </groups>
      <levels>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>1</multiSelect>
        <name>levels</name>
        <number>2</number>
        <prettyName>Levels</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>3</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
      </levels>
      <users>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>input</displayType>
        <multiSelect>1</multiSelect>
        <name>users</name>
        <number>3</number>
        <picker>1</picker>
        <prettyName>Users</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <size>5</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
      </users>
    </class>
    <name>WiperDogLib.ConsoleService</name>
    <number>5</number>
    <className>XWiki.XWikiRights</className>
    <guid>f160359a-cac2-4d63-8127-d4b034c2b749</guid>
    <property>
      <allow>0</allow>
    </property>
    <property>
      <levels>edit,delete</levels>
    </property>
    <property>
      <users>XWiki.XWikiGuest</users>
    </property>
  </object>
  <content>
{{groovy}}
import groovy.json.*
//Closure to run a process
def runProcClosure(listCmd,dir,waitFor){
	def output = [:]
	ProcessBuilder builder = new ProcessBuilder(listCmd);
	//builder.redirectErrorStream(true);
	builder.directory(dir);
	Process p = builder.start();
	if(waitFor){
		output['exitVal'] = p.waitFor()
	}
	InputStream procOut  = p.getInputStream();
	InputStream procErr  = p.getErrorStream();

	BufferedReader brIn = new BufferedReader(new InputStreamReader(procOut))
	BufferedReader brErr = new BufferedReader(new InputStreamReader(procErr))
	def line = null
	StringBuffer stdin = new StringBuffer()
	while((line = brIn.readLine()) != null){
		stdin.append(line + "&lt;br/&gt;")
	}
	StringBuffer  stderr = new StringBuffer()
	while((line = brErr.readLine()) != null){
		stderr.append(line + "&lt;br/&gt;")
	}

	output["in"] = stdin.toString()
	output["err"] = stderr.toString()
	return output
}

//Closure to build list commands for process on Windows
def buildCmdList(isLocalhost,psExec,listCmd,isInteractive){
	if(!isLocalhost){
		listCmd.add(psExec)
		listCmd.add("\\\\" + params['wiperdog_path']['host'])
		if(isInteractive){
			listCmd.add("-i")
		}
		listCmd.add("-accepteula")
		listCmd.add("-u")
		listCmd.add('"'+ params['wiperdog_path']['user']+'"')
		listCmd.add("-p")
		listCmd.add('"'+ params['wiperdog_path']['pass'] +'"')
	}
	return listCmd
}
try{
	def cmd = request.getParameter("cmd");
	if(cmd != null &amp;&amp; cmd != ""){
		def osName = System.getProperty('os.name')
		if(osName != null &amp;&amp; osName.toLowerCase().indexOf('win') ==-1){
			Properties props = System.getProperties();
			def xwiki_dir = props.getProperty('user.dir');
			def decidedWiperdog_path
			File f = new File(xwiki_dir +"/webapps/xwiki/resources/conf.params")
			if(f.exists()){
				def shell = new GroovyShell()
				params = shell.evaluate(f)
				if((params != null) &amp;&amp; (params['wiperdog_path'] != null)){
					decidedWiperdog_path = params['wiperdog_path']['path']
				}else{
					println "Wiperdog home not found !"
					println "Please config it !"
					return
				}
			}else{
				println "Wiperdog home not found !"
				println "Please config it !"
				return
			}

			if(request.xpage == "plain") {
				response.setContentType('text/html')
			}
			def errorStr = ""
			def command = ""
			if(params['wiperdog_path']['host'] != "localhost"){
			   command = "ssh -o PasswordAuthentication=no " + params['wiperdog_path']['user'].trim() + "@" + params['wiperdog_path']['host'].trim() + " "

			}
			def proc = null
			if(cmd != null &amp;&amp; !cmd.equals("") &amp;&amp; cmd.equals("start")){
				command += '/bin/sh ' + decidedWiperdog_path + '/bin/wiperdog start '
				proc = command.execute()
				proc.waitFor()
				errorStr = proc.err.text
				if(errorStr != null &amp;&amp; errorStr  != '')
					println "&lt;p&gt; Information: ${errorStr}&lt;/p&gt;"
				println "&lt;p&gt; Output: ${proc.in.text}&lt;/p&gt;"
			}else if(cmd != null &amp;&amp; !cmd.equals("") &amp;&amp; cmd.equals("stop")){
				command += '/bin/sh ' + decidedWiperdog_path + '/bin/wiperdog stop '
				proc = command.execute()
				proc.waitFor()
				errorStr = proc.err.text
				if(errorStr != null &amp;&amp; errorStr  != '')
				println "&lt;p&gt; Information: ${errorStr}&lt;/p&gt;"
				println "&lt;p&gt; Output: ${proc.in.text}&lt;/p&gt;"
			}else if(cmd != null &amp;&amp; !cmd.equals("") &amp;&amp; cmd.equals("status")){
				command += '/bin/sh ' + decidedWiperdog_path + '/bin/wiperdog status '
				proc = command.execute()
				proc.waitFor()
				errorStr = proc.err.text
				if(errorStr != null &amp;&amp; errorStr  != '')
					println "&lt;p&gt; Information: ${errorStr}&lt;/p&gt;"
				println "&lt;p&gt; Checking status: ${proc.in.text}&lt;/p&gt;"
				def paramObj = services.GetServlet
				def consoleServlet = paramObj.getParam('console')
				command = 'curl -is  ' + consoleServlet
				proc = command.execute()
				proc.waitFor()
				errorStr = proc.err.text
				if(errorStr != null &amp;&amp; errorStr  != '')
				println "&lt;p&gt; Information: ${errorStr}&lt;/p&gt;"
				println "&lt;p&gt; Checking echo servlet: ${proc.in.text}&lt;/p&gt;"
			}else if(cmd != null &amp;&amp; !cmd.equals("") &amp;&amp; cmd.equals("hostinfo")){
				//Get host name
				def hostInfo = [:]
				def commandHostname = command + 'hostname '
				proc = commandHostname.execute()
				proc.waitFor()
				hostInfo['hostName'] = proc.in.text
				//Get IP
				def commandIP = command + '/sbin/ifconfig eth0 '
				proc = commandIP.execute()
				proc.waitFor()
				def tmpHostIp = proc.in.text
				def hostIp = ''
                             
				if(tmpHostIp != null &amp;&amp; tmpHostIp.indexOf("inet addr:") != -1){
					hostIp = tmpHostIp.split("inet addr:")[1].split(" ")[0]
				}
				hostInfo['hostIp'] = hostIp
				//Get jetty port
				def commandJport = command + 'cat ' + decidedWiperdog_path +'/etc/system.properties'
				proc = commandJport.execute()
				proc.waitFor()
				def tmpHostPort = proc.in.text
				def hostPort = ""
				if(tmpHostPort != null &amp;&amp; tmpHostPort.indexOf("netty.port=") != -1){
					hostPort = tmpHostPort.split("netty.port=")[1].split("\n")[0]
				}
				hostInfo['hostPort'] = hostPort
				def builder = new JsonBuilder(hostInfo)
				println builder.toPrettyString()
			}else if(cmd != null &amp;&amp; !cmd.equals("") &amp;&amp; cmd.equals("hostport")){
				command += 'cat ' + decidedWiperdog_path +'/etc/system.properties'
				proc = command.execute()
				proc.waitFor()
				println proc.in.text.split("netty.port=")[1].split("\n")[0]
			}
		}else{
		    //Process for Windows
			//-- Set wiperdog PATH
			Properties props = System.getProperties();
			def xwiki_dir = props.getProperty('user.dir');
			def decidedWiperdog_path
			File f = new File(xwiki_dir +"/webapps/xwiki/resources/conf.params")
			if(f.exists()){
				def shell = new GroovyShell()
				params = shell.evaluate(f)
				if((params != null) &amp;&amp; (params['wiperdog_path'] != null)){
					decidedWiperdog_path = params['wiperdog_path']['path']
				}else{
					println "Wiperdog home not found !"
					println "Please config it !"
					return
				}
			}else{
				println "Wiperdog home not found !"
				println "Please config it !"
				return
			}
			//-- END
			//-- Set request content type
			if(request.xpage == "plain") {
				response.setContentType('text/html')
			}
			//-- END

			def errorStr = ""
			def psExec = null
			def command = ""
			List&lt;String&gt; listCmd = new ArrayList&lt;String&gt;()
			//Get PsExec path to run remote commands
			def isLocalhost = true
			if(params['wiperdog_path']['host'] != "localhost"){
				isLocalhost = false
			}
			if(!isLocalhost){
				def prGetPsExec = 'cmd /c echo %PSTOOLS%'.execute()
				psExec = prGetPsExec.in.text.trim() + "\\PsExec.exe"
				psExec = psExec.replace("\\\\","\\")   
				if(psExec == '%PSTOOLS%'){
					println "Can not remote to: " + ['wiperdog_path']['host']
					println "Tool to remote (PsExec.exe) not found !"
					return
				}
			}
			//Run start wiperdog command
			if(cmd != null &amp;&amp; !cmd.equals("") &amp;&amp; cmd.equals("start")){
				listCmd = buildCmdList(isLocalhost,psExec,listCmd,true)
				listCmd.add("net")
				listCmd.add("start")
				listCmd.add("wiperdog")
				def output =  runProcClosure(listCmd,new File(System.getProperty("user.dir")),true)
				if(output.exitVal != null &amp;&amp; output.exitVal == 0){
					if(params['wiperdog_path']['host'] != "localhost"){
						println "Wiperdog service started successfully !"
					} else {
						println  output.in + "&lt;br/&gt;"
						println  output.err + "&lt;br/&gt;"
					}
				} else {
					if(params['wiperdog_path']['host'] != "localhost"){
						println "Could not start wiperdog on : !" + params['wiperdog_path']['host']
					} else {
						println "Could not start wiperdog on : !" + params['wiperdog_path']['host']
						println  output.in + "&lt;br/&gt;"
						println  output.err + "&lt;br/&gt;"

					}

				}
			}else if(cmd != null &amp;&amp; !cmd.equals("") &amp;&amp; cmd.equals("stop")){
				listCmd = buildCmdList(isLocalhost,psExec,listCmd,true)
				listCmd.add("net")
				listCmd.add("stop")
				listCmd.add("wiperdog")
				def output =  runProcClosure(listCmd,new File(System.getProperty("user.dir")),true)
				if(output.exitVal != null &amp;&amp; output.exitVal == 0){
					if(params['wiperdog_path']['host'] != "localhost"){
						println "Wiperdog service stopped successfully !"
					} else {
						println  output.in + "&lt;br/&gt;"
						println  output.err + "&lt;br/&gt;"
					}
				} else {
					if(params['wiperdog_path']['host'] != "localhost"){
						println "Could not stop wiperdog on : " + params['wiperdog_path']['host']
					} else {
						println "Could not stop wiperdog ! Reason: &lt;br/&gt; "
						println  output.in + "&lt;br/&gt;"
						println  output.err + "&lt;br/&gt;"

					}

				}

			}else if(cmd != null &amp;&amp; !cmd.equals("") &amp;&amp; cmd.equals("status")){
				listCmd = buildCmdList(isLocalhost,psExec,listCmd,false)
				listCmd.add("sc")
				listCmd.add("query")
				listCmd.add("wiperdog")
				def output =  runProcClosure(listCmd,new File(System.getProperty("user.dir")),true)
				if(output.exitVal != null &amp;&amp; output.exitVal == 0)
				println "&lt;p&gt; Information: ${output.in}&lt;/p&gt;"
				//println "&lt;p&gt; Checking status: ${output.err}&lt;/p&gt;"
				def paramObj = services.GetServlet
				def consoleServlet = paramObj.getParam('console')
				listCmd = new ArrayList&lt;String&gt;()
				listCmd = buildCmdList(isLocalhost,psExec,listCmd,false)
				listCmd.add(decidedWiperdog_path + "\\service\\curl\\curl" )
				listCmd.add("-is")
				listCmd.add(consoleServlet)
				output =  runProcClosure(listCmd,new File(System.getProperty("user.dir")),true)
				if(output.exitVal != null &amp;&amp; output.exitVal == 0) {
					println "&lt;p&gt; Checking echo servlet: &lt;br/&gt; ${output.in}&lt;/p&gt;"
				} else {
					println "&lt;p&gt;Failed to check echo servlet ! : &lt;br/&gt; ${output.in}&lt;/p&gt;" 
				}
			}else if(cmd != null &amp;&amp; !cmd.equals("") &amp;&amp; cmd.equals("hostinfo")){
				 def hostInfo = [:]
				//Get host name
				listCmd = buildCmdList(isLocalhost,psExec,listCmd,false)
				listCmd.add("hostname")
				def output =  runProcClosure(listCmd,new File(System.getProperty("user.dir")),true)
				def hostName = output.in
				def newHostName = hostName.replace("\r", "")
				hostName = newHostName.replace("\n","")
				hostInfo['hostName'] = hostName.replace("&lt;br/&gt;","")
			    //Get host IP
				listCmd = new ArrayList&lt;String&gt;()
				listCmd = buildCmdList(isLocalhost,psExec,listCmd,false)
				listCmd.add("cmd")
				listCmd.add("/c")
				listCmd.add("ipconfig")
				output =  runProcClosure(listCmd,new File(System.getProperty("user.dir")),false)
				def tmpHostIp = output.in
				def hostIp = ''
				if(tmpHostIp != null &amp;&amp; tmpHostIp.indexOf("Local Area Connection") != -1){
					hostIp = tmpHostIp.split("Local Area Connection")[1].split("IP Address")[1].split("&lt;br/&gt;&lt;br/&gt;")[0].split(":")[1].trim()
									hostInfo['hostIp'] = hostIp 
				}

				 //-- Get Jetty port from wiperdog properties file
				if(!isLocalhost){
									def rootDir = decidedWiperdog_path.substring(0,decidedWiperdog_path.indexOf(":"))
									def cmdNetUse = "net use \\\\"+params['wiperdog_path']['host']+"\\"+rootDir + "\$" + " /user:"+params['wiperdog_path']['user']+" "+params['wiperdog_path']['pass']
									def proc = cmdNetUse.execute()
									def tmpWiperdog_path = decidedWiperdog_path.replace(":\\","\$\\")
									def cmdCopy = "cmd /c copy /Y \\\\" +params['wiperdog_path']['host']+"\\"+ tmpWiperdog_path+"\\etc\\system.properties ."
									proc = cmdCopy.execute() 
									File sysProps = new File(".\\system.properties")
									if(sysProps.exists()){
										hostInfo['hostPort'] = sysProps.getText().split("netty.port=")[1].split("\n")[0]    
										sysProps.delete() 
									} else {
										hostInfo['hostPort'] = ""
									}
							 } else {
					Properties jettyProps = new Properties()
					File propsFile = new File(decidedWiperdog_path +'/etc/system.properties')
					jettyProps.load(propsFile.newDataInputStream())
					def hostPort = jettyProps.getProperty('netty.port')
							 
					hostInfo['hostPort'] = hostPort
				 }
				 def builder = new JsonBuilder(hostInfo)
				 println builder.toPrettyString()


			}else if(cmd != null &amp;&amp; !cmd.equals("") &amp;&amp; cmd.equals("hostport")){
				//-- Get Jetty port from wiperdog properties
				Properties jettyProps = new Properties()
				File propsFile = new File(decidedWiperdog_path +'/etc/system.properties')
				jettyProps.load(propsFile.newDataInputStream())
				def hostPort = jettyProps.getProperty('netty.port')
				println hostPort
			}
		}
	}
}catch(Exception ex){
	println ex
}


{{/groovy}}</content>
</xwikidoc>
